Usando Redes Complexas para Melhorar a Classificação Hierárquica de Textos Legais

Rilder S. Pires1,2, Raquel Silveira3, Carlos G. O. Fernandes2,4, João A. Monteiro Neto5 e Vasco Furtado1,2,6

1 Laboratório de Ciência de Dados e Inteligência Artificial, Universidade de Fortaleza, Fortaleza, Ceará, Brasil
2 Programa de Pós Graduação em Informática Aplicada, Universidade de Fortaleza, Fortaleza, Ceará, Brasil
3 Instituto Federal de Educação, Ciência e Tecnologia do Ceará, Tianguá, Ceará, Brasil
4 BNB - Banco do Nordeste do Brasil S.A., Fortaleza, Ceará, Brasil
5 Centro de Ciências Jurídicas, Universidade de Fortaleza, Fortaleza, Ceará, Brasil
6 ETICE - Empresa de Tecnologia da Informação do Ceará, Fortaleza, Ceará, Brasil

Resumo. Temas legais são tipicamente organizados em árvores de rótulos, onde cada ramificação, desde a raiz (tópicos gerais) até a folha (tópicos específicos), categoriza a vocabulária que descreve processos judiciais. Neste artigo, descrevemos uma abordagem, inovadora no Sistema de Justiça Brasileiro, de classificação hierárquica automática de um tópico de petição. A abordagem integra métodos baseados em transformers e redes complexas para capturar, além das características do texto, a relação entre as citações legais presentes nas petições e o tópico ao qual a petição se refere. A validação desta abordagem é feita através de um benchmark que mostra ganhos de precisão, bem como um cenário prático com a implementação de um microserviço em uma Plataforma Nacional de Justiça cuja implementação de front-end já está sendo utilizada por um Tribunal Estadual para sugerir automaticamente a classificação do tópico de petição no Sistema Procedimental Nacional.

Palavras-chave: Classificação de Texto · Sistema Legislativo Brasileiro · Redes Complexas.
Tópicos legais são tipicamente organizados em árvores hierárquicas, onde cada ramificação, desde a raiz (por exemplo, direito do consumidor) até a folha (por exemplo, danos morais ou materiais), categoriza a vocabulária que descreve processos judiciais. A classificação de tópicos ocorre geralmente nos estágios iniciais do processo judicial quando uma petição é apresentada ao tribunal. Nesse ponto, o autor da petição é obrigado a indicar o assunto relevante da demanda. No contexto brasileiro, o autor da petição deve escolher o tópico de uma hierarquia que abrange mais de 4.000 assuntos, que fazem parte do Sistema de Tabelas Procedimentais Unificadas (TPU) mantido pelo Conselho Nacional de Justiça (CNJ) [9]. Fazer a associação correta dentro dessa hierarquia não é uma tarefa trivial e é frequentemente feita incorretamente pelo autor da petição. Essa desclassificação gera atrasos no processo judicial, levando a impactos negativos tanto financeiramente, devido ao rework, quanto socialmente, ao fomentar um sentimento de impunidade. A literatura científica apresenta várias metodologias para a classificação automática de documentos judiciais [21, 29, 4, 14, 2, 1]. O advento da classificação de texto via aprendizado profundo, particularmente com modelos de transformador, avançou significativamente o campo de classificação de texto [10, 17, 28, 31]. No entanto, a estrutura hierárquica intrincada e extensa de tópicos, juntamente com a natureza especializada de textos legais, apresenta desafios significativos para os métodos tradicionais. Ao examinar mais de perto nosso problema, vemos que é um problema de classificação de texto hierárquica, onde geralmente buscamos categorizar um texto em um conjunto de rótulos organizados em uma estrutura de classe hierárquica. O grande desafio com esse tipo de tarefa é modelar adequadamente a hierarquia de rótulos, que é usualmente grande, desbalanceada e altamente estruturada [34]. Esses desafios nos motivaram a desenvolver uma abordagem inovadora.
Nosso abordagem pressupõe que as numerosas citações legais presentes nas petições são fundamentais para compreender o conteúdo do documento e definir seu assunto relevante. Essas citações legais não apenas ajudam a formalizar os argumentos apresentados por ambos os peticionários e os tomadores de decisão, mas também servem como um ponte conectando a petição às disposições legais aplicáveis, como leis, decretos, precedentes e artigos. Ao examinar as citações dentro de cada petição, podemos construir uma rede que ligue as disposições legais aos tópicos da petição. Essa rede oferece informações suplementares para melhorar o processo de classificação automática, o que resulta em uma melhoria significativa na precisão. Usando essa abordagem baseada em rede, desenvolvemos um classificador com base no BERT que aproveita não apenas o texto da petição, mas também informações de vetor geradas pelas conexões de rede entre tópicos e disposições legais. Validei nossa metodologia com um conjunto de dados composto por 300.000 petições de vários tribunais brasileiros, mantido pelo sistema Codex do CNJ. Os resultados demonstram a validade da nossa abordagem, mostrando ganhos significativos na precisão em alguns casos, quando comparados a um método de classificação hierárquica que não utiliza informações de rede. Além disso, mostramos um exemplo de aplicação da abordagem proposta em uma versão de um modelo de classificação hierárquica disponível na plataforma SINAPSE do Conselho e atualmente utilizada por um Tribunal Estadual para sugerir automaticamente classificações de tópicos para petições inscritas no Sistema Nacional de Processo.

2 Trabalhos Relacionados O modelo de redes complexas baseado nas características de um processo judicial tem seu potencial comprovado em várias obras, como descrito em [27, 11, 5, 13, 25, 24]. A classificação de documentos legais tem sido utilizada no contexto forense e de aplicação da lei (por exemplo,
Identificando potenciais criminosos [32], predizendo crimes [22, 23] ou descobrindo comportamento antisocial [7]). Mariana et al. [21] investigaram, no contexto brasileiro, diferentes métodos de classificação e representação de dados para concluir que a aprendizagem profunda (mais especificamente) com Word2Vec treinada em um corpus específico do domínio, são métodos promissores, mas ainda limitados, para classificar muitas classes. Luz de Araujo et al. [4] apresentaram um novo conjunto de dados construído a partir de documentos legais do Supremo Tribunal Federal do Brasil, contendo dados de texto rotulados para dois tipos de tarefas: classificação do tipo de documento e atribuição de temas. Os autores exploraram e compararam diferentes métodos de classificação, como modelos de bag-of-words, CNN, RNN, algoritmos de boosting e campos aleatórios condicionais em cadeia linear. A CNN com embedding de palavras também provou ser mais performante. Silva et al. [30] propuseram um modelo estruturado em CNN para classificar tipos de documentos recebidos pelo Supremo Tribunal Federal do Brasil. Aguiar et al. [1] investigaram a aplicação do modelo de tópicos para identificar o assunto de documentos legais e avaliaram a aplicabilidade em classificar processos legais brasileiros. O modelo de classificação foi treinado em documentos do Tribunal de Justiça do Ceará, no Brasil, e os casos foram classificados nas cinco classes mais representativas do Conselho Nacional de Justiça (CNJ) do Brasil. Recentemente, modelos pré-treinados com base em BERT mostraram ser mais performantes para classificar tópicos. Importante, a eficácia do BERT é principalmente devido à capacidade de transferência de aprendizado que aproveita conhecimento semântico e sintático de pré-treinamento em um grande corpus não rotulado [10]. Aguiar et al. [2] investigaram diferentes métodos de classificação de texto e diferentes combinações de embeddings, extraídos de modelos de linguagem portuguesa, e informações sobre legislação citada nos documentos iniciais para a tarefa de classificação de processos.
Os modelos foram treinados com uma Coleção Ouro da Justiça do Estado do Ceará, no Brasil, cujos processos foram classificados nas cinco classes mais representativas do CNJ. O melhor resultado foi obtido pelo modelo BERT. Shaheen et al. [29] estudaram o desempenho de vários modelos baseados em transformadores (nomeadamente BERT [10], RoBERTa [17], DistilBERT [28] e XLNet [36]) em combinação com estratégias como treinamento pré-generativo, desbloqueio gradual e taxas de aprendizado discriminantes para alcançar desempenho de ranking competitivo. Chalkidis et al. [6] desenvolveram um conjunto de dados de previsão de sentença jurídica em inglês, contendo casos da Corte Europeia dos Direitos Humanos. Uma variedade ampla de modelos neurais é avaliada nesse conjunto de dados, estabelecendo fortes bases que superam modelos baseados em características anteriores. Wang et al. [34] apresentaram o método de Ajuste de Prompt Hierárquico (HPT), destinado a abordar a classificação de texto hierárquica do ponto de vista de um modelo de linguagem mascarado com múltiplos rótulos. O método envolve criar um template virtual dinâmico e usar palavras de rótulo que atuam como prompts suaves, integrando conhecimento da hierarquia de rótulos. Além disso, uma perda de cruz-entropia multi-rótulo sem limites é introduzida para alinhar os processos de classificação de texto hierárquica com modelos de linguagem mascarada. Os autores conduziram experimentos que demonstraram que o HPT alcança um bom desempenho em vários conjuntos de dados de classificação de texto hierárquica populares.

A Abordagem Proposta

Na abordagem proposta, supomos que a fonte primária de dados é um conjunto de petições textuais P que compõem a peça inicial do caso judicial. Cada petição inicial está associada a um tema jurídico que o caso aborda. No texto dessas petições, há referências a provisões jurídicas que apoiam os argumentos apresentados pelo requerente.
A hipótese é que a relação entre um tema jurídico e um ou mais dispositivos legais é relevante para classificar automaticamente a matéria de uma petição. A figura 1 mostra o pipeline do método proposto, que depende dos textos das petições e das citações à legislação feitas nelas. Conhecimento adicional sobre a estrutura hierárquica dos temas e dispositivos legais é utilizado. Essa informação adicional e as citações dos dispositivos legais no texto formam uma rede complexa de temas e dispositivos legais que modelaremos aqui por meio de um grafo ponderado. Em seguida, a embedagem dos vértices nesse grafo permite gerar uma representação vetorial das petições. As seções subsequentes fornecerão a formalização desses conceitos.

3.1 Grafo Bipartido de Dispositivos Legais e Temas

Dado um conjunto de petições P, definimos GB como o grafo que representa a relação de co-ocorrência entre os temas jurídicos das petições de P e os dispositivos legais citados nelas. Aqui, definimos GB = (A, D, EB, wB), onde:

– A = {a1, a2, ..., an}, n ∈ N, é um conjunto finito de vértices relacionados a temas jurídicos.
– D = {d1, d2, ..., dm}, m ∈ N, é um conjunto finito de vértices relacionados aos dispositivos legais.
– EB ⊂ A × D é um conjunto finito de arestas conectando subconjuntos de vértices de A e D.
– wB : EB → R é uma função de peso de aresta definida nas arestas de GB.
Nesse gráfico, há uma aresta entre os vértices ai e dj se há, pelo menos, um pedido em P cujo tema jurídico corresponde a ai e que faz, pelo menos, uma referência à disposição jurídica dj. Geralmente, supomos que o peso wBi,j dessa aresta seja uma função do número de vezes qi,j que a disposição jurídica dj é referenciada pelos pedidos do tema ai em P. O gráfico GB apresenta semelhanças com outros gráficos já estudados na literatura, como o gráfico de citações bibliográficas [19]. Lá, os vértices representam documentos que fazem referências a outros documentos. Uma característica importante desse tipo de gráfico é a existência de documentos com um alto número de citações [19]. Esses vértices com muitas ligações acabam tornando difícil identificar os padrões de agrupamento existentes no gráfico [3]. Da mesma forma que ocorre em gráficos bipartidos de usuários e objetos, definimos uma função de peso que utiliza uma estratégia baseada em uma técnica popular na recuperação de informações [3] chamada tfidf, wBi,j ≡wB(ai, dj) = f(ai, dj) × log  n deg(dj)  (1) onde f(ai, dj) é semelhante a “tf” e representa a frequência com que a disposição jurídica dj é citada em pedidos de um certo tema ai, f(ai, dj) = qi,j P⟨ai⟩ k qi,k , e ⟨·⟩ significa que a soma em k é feita no bairro de ai. O termo log (n/deg(dj)) da Eq. (1) é semelhante a “idf”, medindo quanto a disposição jurídica é rara ou comum entre todos os temas jurídicos.

3.2 Florestas de Temas Jurídicos e Disposições Jurídicas

Os temas jurídicos têm relações hierárquicas taxonômicas e são pré-definidos no sistema de Tabelas Procedimentais Unificadas [9]. O gráfico GA = (A, EA) representa a taxonomia de temas jurídicos, onde:

– A = {a1, a2, ..., an}, n ∈ N, é um conjunto finito de vértices relacionados a temas jurídicos.
– EA ⊂ A × A é um conjunto finito de arestas direcionadas que conectam os vértices do GA.
A assimetria intrínseca das relações entre os vértices da GA faz com que ela caia na classe de florestas direcionadas raizadas. Esses grafos têm propriedades importantes do ponto de vista topológico. Nessas grafos, podemos definir dois tipos de vértices especiais, os vértices raiz e os vértices folha. Considerando que as conexões entre dois vértices sempre ocorrem desde o assunto jurídico mais geral para o assunto mais específico, um vértice raiz é definido como um vértice que apenas tem conexões "saindo" dele. Complementarmente, um vértice folha pode ser definido como um vértice que apenas tem links "entrando" nele. Do ponto de vista de tópicos jurídicos, podemos interpretar os vértices folha como os tópicos mais específicos existentes na GA e os vértices raiz como os mais genéricos na GA. Além disso, a estrutura topológica das árvores direcionadas raizadas permite que definamos, para cada vértice folha ai, um vértice raiz único correspondente root(ai), ou seja, para cada assunto específico, um assunto jurídico único correspondente. Da mesma forma que ocorre com os tópicos, as disposições jurídicas têm relações hierárquicas que permitem que definamos um grafo GD = (D, ED), onde – D = {d1, d2, ..., dn}, m ∈ N, é um conjunto finito de vértices que descrevem disposições jurídicas. – ED ⊂ D × D é um conjunto finito de arestas direcionadas que conectam os vértices de GD representando a relação "parte de" entre as peças que compõem uma lei. Embora semanticamente diferente da taxonomia descrita anteriormente, a assimetria das relações entre os vértices de GD também a classifica como uma floresta direcionada raizada. As disposições jurídicas estão organizadas hierarquicamente como uma partonomia, onde os vértices do tipo raiz representam disposições jurídicas completas, como Leis, Decretos e Precedentes, compostas de partes como seções, artigos, parágrafos e itens. Para cada vértice folha di, há também um vértice raiz único correspondente root(di).
3 Gráfico Pesoado de Tópicos e Providências Legais Dado um conjunto de petições iniciais P, podemos definir um gráfico bipartido de tópicos e providências legais GB = (A, D, EB, w) como mostrado na Sec. 3.1. Além disso, o conhecimento de fundo sobre tópicos legais permite construir uma floresta de tópicos legais GA = (A, EA) como mostrado na Sec. 3.2. Assim, podemos definir um novo gráfico bipartido G′ B = (Aleaf, D, E′ B, w′ B) como subgráfico de GB, onde: – Aleaf é o conjunto de vértices que são do tipo folha em GA representando tópicos específicos. – D é o conjunto de vértices de GB representando as providências legais. – E′ B é o conjunto de arestas de GB onde wi,j ≥ τ. – w′ B : E′ →R é uma função de peso de aresta definida em E′ como w′ Bi,j = wBi,j. Aqui, τ corresponde a um limiar de tfidf abaixo do qual consideramos que uma aresta não justifica ser criada em G′ B. É importante notar que, ao contrário do que ocorre em GB, em G′ B há apenas vértices relacionados a tópicos legais do tipo folha. Agora, podemos definir o gráfico pesoado de tópicos e providências legais G = (V, E, w), pela junção de G′ B e as versões não direcionadas das florestas G′ A = (A, E′ A) e G′ D = (D, E′ D), onde: – V = A ∪D = {v1, v2, ..., vn+m} é o conjunto de vértices de G′, definido como a união dos vértices relacionados a tópicos e providências legais. – E = E′ B ∪E′ A ∪E′ D é o conjunto de arestas conectando os vértices em V. – w : E →R é uma função de peso de aresta definida em E como: wi,j = {w′ B(vi, vj) se a aresta (vi, vj) ∈E′ B τ caso contrário Em ordem para que a condição (vi, vj) ∈E′ B seja satisfeita, é necessário que as condições vi ∈A e vj ∈D também sejam satisfeitas, pois G′ B é um gráfico bipartido. Como definido anteriormente, o gráfico G é um gráfico simples pesoado. Isso permite gerar representações vetoriais para os vértices desse gráfico, como veremos na próxima subseção.
4 Geração de Embeddings Nesta seção, descrevemos o processo de geração da representação vetorial de citações legais a partir de um grafo ponderado de tópicos e disposições legais e as embeddings de petições que, por sua vez, utilizam essas representações. Geração de embeddings de vértices de G. Nesse passo, utilizamos o grafo apresentado na seção anterior para gerar as embeddings de seus vértices. Para isso, definimos a função de mapeamento g[G] : V → Rd, que associa a cada vértice vi ∈ V um vetor vi de d dimensões. A intuição desse abordagem é que, nesse espaço, o vetor vi estará próximo dos vértices que pertencem ao vizinhança de vi. Em seguida, tópicos legais serão "colocados" próximos às disposições legais que ocorrem simultaneamente em petições e/ou ao lado de tópicos mais gerais na hierarquia de tópicos. As embeddings de citações mencionadas anteriormente podem ser vistas como uma forma alternativa, além do texto natural de linguagem, de representar os argumentos utilizados pelo requerente. Nesse sentido, disposições legais são citadas para representar e apoiar o objeto de uma petição e são relevantes para determinar o tópico legal à qual a petição se refere. Para gerar a embedding para G, utilizamos o algoritmo node2vec+ implementado na biblioteca pecanpy [16], que foi escolhida por sua capacidade de capturar comunidades conformadas [15]. Geração de embeddings de uma petição. A partir da representação vetorial de cada citação legal feita em uma petição dada, a embedding da petição pode ser calculada. A representação pj para uma petição a partir das disposições legais que cita é definida como pj = PΩj k vk L(Ωj) , onde a soma é realizada sobre o conjunto Ωj de todas as representações correspondentes às disposições legais mencionadas na petição do processo j e L(Ωj) é o número total de elementos em Ωj.
O texto da petição inicial passa por uma fase de padronização textual com o objetivo de padronizar termos legais (por exemplo, art. 1 da Lei nº 11.419, de 19 de dezembro de 2006, até art. 1 da Lei 11.419/2006), removendo espaços excessivos, linhas repetidas e caracteres especiais e estendendo abreviaturas de agências e estados da federação. Em seguida, as disposições legais citadas na petição são identificadas usando expressões regulares e, em seguida, procedemos como descrito na seção anterior para gerar a petição de embedding. A classificação automática é feita com base em uma arquitetura de Prompt Tuning hierárquica [34]. Em nível alto, o texto padronizado da aplicação é enviado para o módulo BERT, cuja arquitetura é estruturada em um encoder de codificador bidirecional em camadas múltiplas [10]. O texto de entrada é codificado em uma sequência de tokens gerada usando embeddings de WordPiece [35]. As características textuais são então passadas para uma pilha de camadas de encoder, após a augmentação com codificação de posição. Embeddings de posição são adicionados a cada camada do encoder do transformador para ajudar o transformador a aprender dependências entre tokens. Após a aplicação das camadas de codificação do transformador, o módulo BERT resulta em uma camada de pooling linear. O módulo de combinação recebe como entrada as recursos de texto emitidas do modelo de transformador BERT e as recursos numéricas vindas da "representação vetorial de citações legais". Dali, o módulo gera uma representação multimodal combinada. Utilizamos o módulo de combinação proposto por [34], que recebe como entrada as características textuais geradas a partir de um modelo de transformador e características numéricas e gera uma representação combinada, através de métodos que combinam as representações em seus respectivos espaços de características. Para incorporar a hierarquia de rótulos, propomos uma camada de prompt hierárquica (conforme [34]).
Desde que a hierarquia de rótulos é uma árvore, construímos templates com base na profundidade da hierarquia de rótulos. A restrição de hierarquia apenas introduz a profundidade dos rótulos, mas falta sua conectividade. Para fazer pleno uso da hierarquia de rótulos de forma MLM, injetamos adicionalmente o conhecimento da hierarquia de rótulos por camada no embedding de template. Uma rede de atenção gráfica empilhada de K camadas (GAT) [12] é adotada para modelar a hierarquia de rótulos. Como a classificação de texto hierárquica é um problema de classificação multi-rótulo, em vez de calcular a pontuação de cada rótulo separadamente, esperamos que as pontuações de todos os rótulos alvo sejam maiores do que as de todos os rótulos não-alvo. Utilizamos uma perda de entropia multi-rótulo (MLCE) [33], introduzindo um rótulo âncora com uma pontuação constante de 0 na MLCE e esperando que as pontuações dos rótulos alvo e não-alvo sejam todas maiores e menores do que 0, respectivamente. Assim, formamos uma perda de entropia multi-rótulo com zero como limite (ZMLCE). Para ser consistente com a restrição de hierarquia, adotamos a ZMLCE em cada camada de hierarquia de rótulos para a previsão por camada. Fig. 2. Arquitetura do nosso modelo. A arquitetura é dividida em duas etapas: (i) pré-processamento de dados: o texto da petição inicial é pré-processado para padronizar termos legais e identificar os artigos e leis citados no texto, e (ii) classificação: combina os dados de entrada (texto e rede bipartida de tópicos de citação) e utiliza a arquitetura do Prompt Tuning Hierárquico (HPT) [32] durante o treinamento. O HPT transforma a classificação de texto hierárquica (HTC) em um problema de modelo de linguagem mascarada multi-rótulo hierárquico (MLM) com conhecimento de hierarquia de rótulos, incorporando o conhecimento da hierarquia de rótulos. O HPT transforma a HTC em um problema de MLM multi-rótulo com perda de entropia multi-rótulo com zero como limite.
4 O Classificador em Uso A avaliação do desempenho do modelo foi feita a partir de sua aplicação em dados reais de 300.000 petições de processos legais oriundas de Tribunais do Trabalho, Tribunais Regionais Federais e Tribunais de Justiça dos estados brasileiros.

10 Rilder S. Pires et al.

4.1 Conjunto de Dados de Petições Como já foi mencionado na seção 3.2, os temas legais são categorizados de acordo com uma tabela específica de temas chamada Tabela Procedimental Unificada TPU [9] desenvolvida pelo Conselho Nacional de Justiça CNJ. A hierarquia presente nestas tabelas permite que agreguemos temas específicos em temas genéricos. Utilizamos essa estratégia para separar nosso conjunto de dados em grupos de temas muito distintos, o que nos permitiu testar nossa abordagem em diferentes níveis de complexidade. Na tabela 1, mostramos a distribuição percentual de petições iniciais para cada tema genérico no conjunto de dados de 300.000 petições.

Tema Genérico Lei Processual (%) 14 - Direito Tributário 4,4 195 - Direito Previdenciário 4,7 287 - Direito Penal 5,7 864 - Direito do Trabalho 11,1 899 - Direito Civil 29,0 1156 - Direitos do Consumidor 25,2 1209 - Direito Processual Penal 0,4 8826 - Direito Processual Civil e do Trabalho 13,0 9985 - Direito Administrativo e outros assuntos de Direito Público 6,3

Tabela 1. Distribuição percentual de processos por temas legais. Os códigos utilizados nesta tabela são definidos pela TPU e são os mesmos que serão utilizados na seção de resultados. O conjunto de 300.000 petições foi então dividido seguindo uma razão de 80% para treinamento e 20% para teste. Fizemos questão de que o conjunto de dados apenas contenha petições com pelo menos 50 palavras e que mais de 80% das palavras válidas fossem válidas7.

4.2 Processo de Treinamento A gráfica G foi criada a partir das disposições legais identificadas no conjunto de petições P dos dados de treinamento. Em seguida, a representação vetorial das citações de petições foi gerada, como descrito na Sec. 3.4. O valor τ ≈ 8,48 · 10−3 foi ajustado empiricamente identificando o valor que melhor separava os temas da GB.
Foi feito isso ao analisar o coeficiente de assortatividade [20] da projeção de um modo [19] relativamente à partição de tópicos jurídicos. Foi feita uma fine-tuning do modelo pré-treinado BERTimbau [31], onde todos os parâmetros foram ajustados usando os tópicos específicos das petições utilizadas no treinamento. No módulo mesun_etal_2020rge, utilizamos o método de soma gatada de merge na saída do transformador para o texto da petição e o vetor 7. A verificação de palavras válidas foi realizada usando os léxicos propostos por [18]. A representação de citação foi feita usando Complex Networks antes da camada de classificação final [8]. O modelo foi treinado com tamanho de batch de 16 exemplos, 30 épocas máximas e parada precoce de 5 épocas. O otimizador Adam foi escolhido com taxa de aprendizado de 10−5 e 5-fold cross-validation. Foi aplicada amostragem aleatória para igualar o número de exemplos de cada classe.

4.3 Avaliação Comparativa e Implementação

Para uma avaliação detalhada da nossa abordagem, comparamos nosso modelo (descrito na Sec. 3.5) com o método de classificação hierárquica original [34] (que utiliza apenas o texto como entrada). Os resultados para cada tópico específico foram calculados em termos de Precisão, Recall e F1-score, obtidos das etiquetas reais e preditas no conjunto de dados de teste. Na Tab. 2, mostramos os resultados dos classificadores para os diferentes tópicos genéricos apresentados na seção anterior.

Tabela 2. Resultados de precisão, recall e F1-score para diferentes tópicos genéricos.
Aqui, N é o número de tópicos específicos presentes em cada tópico genérico. Os métricos mostram a comparação entre o classificador que utiliza apenas o texto das petições e o que utiliza o texto e a representação vetorial definida pela nossa abordagem. Os resultados apresentados nesta tabela mostram que o classificador que utiliza informações das citações apresenta melhor desempenho em algumas situações. Precisamente, apresenta melhor desempenho nos tópicos genéricos “864 - Direito do Trabalho”, “899 - Direito Civil” e “1209 - Direito Processual Penal”. Acreditamos que, nestes casos, nossa abordagem é capaz de capturar melhor as relações que existem entre as disposições legais e os tópicos específicos devido à existência de disposições legais que detalham várias situações específicas nestas ramificações do Direito. Um exemplo de aplicação onde essa abordagem é muito útil ocorre quando um petidor apenas informa um tópico genérico ao submeter a petição. Nesse caso, um meta-modelo seria capaz de identificar qual abordagem é mais apropriada para classificar o assunto específico daquela petição com base no tópico genérico informado. De fato, incorporamos uma versão de um modelo de classificação hierárquica na plataforma SINAPSES do CNJ [8] na forma de um micro-serviço. Essa plataforma visa compartilhar, entre instituições judiciais brasileiras, modelos de inteligência artificial desenvolvidos pelo setor público e privado. Na Figura 3, mostramos a interface do sistema de registro do processo judicial, PJe, após a implementação da funcionalidade de previsão de tópico folha com a chamada do micro-serviço de classificação implementado na plataforma SINAPSES. Fig. 3. Captura de tela do sistema PJe com a característica de prever o tópico de uma petição. A captura de tela é numerada para mostrar: 1) é o tópico principal informado pelo usuário, 2) é o tópico específico predito e 3) é o texto da petição.
5 Conclusões

A citação a disposições legais existentes em processos é uma particularidade importante desse tipo de documento. Elas adicionam informações adicionais ao texto e podem ser utilizadas por métodos de processamento de linguagem natural automática para uma variedade de tarefas. Neste artigo, descrevemos como a classificação automática de tópicos de uma petição pode ser aprimorada com base nessas citações. O abordagem integra métodos baseados em transformadores com uma rede complexa para capturar, além de características de texto, a relação entre citações legais presentes nas petições e o tópico a que a petição se refere. Este trabalho de pesquisa caracteriza-se pela proposta de um método inovador baseado na combinação de Aprendizado Profundo e Redes Complexas, e na aplicação dessas ideias no mundo real. A implementação de um micro-serviço na Plataforma Nacional de Justiça, bem como a implementação de uma interface de usuário que utiliza esse serviço, constitui um ferramenta inovadora a ser utilizada em todo o país por diferentes instituições da Justiça Brasileira. É esperado que isso traga aumento de produtividade, redução de custos e mais agilidade às sentenças judiciais. O futuro trabalho envolve melhorar a precisão do método via fine-tuning de parâmetros e técnicas utilizadas para manipular a rede. Por exemplo, investigações de métodos alternativos para geração de embeddings de grafo para capturar relações temporais podem melhorar os resultados finais. Além disso, monitorar o uso do classificador pelas diferentes instituições pode esclarecer a experiência do usuário e os benefícios reais que a abordagem traz ao cidadão. Agradecimentos. Agradecemos calorosamente ao CNPq, CAPES, FUNCAP, BNB e à Fundação Edson Queiroz pelo apoio financeiro.